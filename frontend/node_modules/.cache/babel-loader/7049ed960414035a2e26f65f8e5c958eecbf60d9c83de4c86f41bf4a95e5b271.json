{"ast":null,"code":"/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\n\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\n\nvar qrcode = require('./qrcode')();\nfunction BitMatrix(width, height) {\n  if (!height) height = width;\n  if (width < 1 || height < 1) {\n    throw \"Both dimensions must be greater than 0\";\n  }\n  this.width = width;\n  this.height = height;\n  var rowSize = width >> 5;\n  if ((width & 0x1f) != 0) {\n    rowSize++;\n  }\n  this.rowSize = rowSize;\n  this.bits = new Array(rowSize * height);\n  for (var i = 0; i < this.bits.length; i++) this.bits[i] = 0;\n  this.__defineGetter__(\"Width\", function () {\n    return this.width;\n  });\n  this.__defineGetter__(\"Height\", function () {\n    return this.height;\n  });\n  this.__defineGetter__(\"Dimension\", function () {\n    if (this.width != this.height) {\n      throw \"Can't call getDimension() on a non-square matrix\";\n    }\n    return this.width;\n  });\n  this.get_Renamed = function (x, y) {\n    var offset = y * this.rowSize + (x >> 5);\n    return (qrcode.URShift(this.bits[offset], x & 0x1f) & 1) != 0;\n  };\n  this.set_Renamed = function (x, y) {\n    var offset = y * this.rowSize + (x >> 5);\n    this.bits[offset] |= 1 << (x & 0x1f);\n  };\n  this.flip = function (x, y) {\n    var offset = y * this.rowSize + (x >> 5);\n    this.bits[offset] ^= 1 << (x & 0x1f);\n  };\n  this.clear = function () {\n    var max = this.bits.length;\n    for (var i = 0; i < max; i++) {\n      this.bits[i] = 0;\n    }\n  };\n  this.setRegion = function (left, top, width, height) {\n    if (top < 0 || left < 0) {\n      throw \"Left and top must be nonnegative\";\n    }\n    if (height < 1 || width < 1) {\n      throw \"Height and width must be at least 1\";\n    }\n    var right = left + width;\n    var bottom = top + height;\n    if (bottom > this.height || right > this.width) {\n      throw \"The region must fit inside the matrix\";\n    }\n    for (var y = top; y < bottom; y++) {\n      var offset = y * this.rowSize;\n      for (var x = left; x < right; x++) {\n        this.bits[offset + (x >> 5)] |= 1 << (x & 0x1f);\n      }\n    }\n  };\n}\nmodule.exports = BitMatrix;","map":{"version":3,"names":["qrcode","require","BitMatrix","width","height","rowSize","bits","Array","i","length","__defineGetter__","get_Renamed","x","y","offset","URShift","set_Renamed","flip","clear","max","setRegion","left","top","right","bottom","module","exports"],"sources":["/Users/alizhetpis/Documents/duken/frontend/node_modules/jsqrcode/src/bitmat.js"],"sourcesContent":["/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nvar qrcode = require('./qrcode')();\r\n\r\n\r\nfunction BitMatrix( width,  height) {\r\n  if(!height)\r\n    height=width;\r\n  if (width < 1 || height < 1)\r\n  {\r\n    throw \"Both dimensions must be greater than 0\";\r\n  }\r\n  this.width = width;\r\n  this.height = height;\r\n  var rowSize = width >> 5;\r\n  if ((width & 0x1f) != 0)\r\n  {\r\n    rowSize++;\r\n  }\r\n  this.rowSize = rowSize;\r\n  this.bits = new Array(rowSize * height);\r\n  for(var i=0;i<this.bits.length;i++)\r\n    this.bits[i]=0;\r\n  \r\n  this.__defineGetter__(\"Width\", function()\r\n  {\r\n    return this.width;\r\n  });\r\n  this.__defineGetter__(\"Height\", function()\r\n  {\r\n    return this.height;\r\n  });\r\n  this.__defineGetter__(\"Dimension\", function()\r\n  {\r\n    if (this.width != this.height)\r\n    {\r\n      throw \"Can't call getDimension() on a non-square matrix\";\r\n    }\r\n    return this.width;\r\n  });\r\n  \r\n  this.get_Renamed=function( x,  y)\r\n    {\r\n      var offset = y * this.rowSize + (x >> 5);\r\n      return ((qrcode.URShift(this.bits[offset], (x & 0x1f))) & 1) != 0;\r\n    }\r\n  this.set_Renamed=function( x,  y)\r\n    {\r\n      var offset = y * this.rowSize + (x >> 5);\r\n      this.bits[offset] |= 1 << (x & 0x1f);\r\n    }\r\n  this.flip=function( x,  y)\r\n    {\r\n      var offset = y * this.rowSize + (x >> 5);\r\n      this.bits[offset] ^= 1 << (x & 0x1f);\r\n    }\r\n  this.clear=function()\r\n    {\r\n      var max = this.bits.length;\r\n      for (var i = 0; i < max; i++)\r\n      {\r\n        this.bits[i] = 0;\r\n      }\r\n    }\r\n  this.setRegion=function( left,  top,  width,  height)\r\n    {\r\n      if (top < 0 || left < 0)\r\n      {\r\n        throw \"Left and top must be nonnegative\";\r\n      }\r\n      if (height < 1 || width < 1)\r\n      {\r\n        throw \"Height and width must be at least 1\";\r\n      }\r\n      var right = left + width;\r\n      var bottom = top + height;\r\n      if (bottom > this.height || right > this.width)\r\n      {\r\n        throw \"The region must fit inside the matrix\";\r\n      }\r\n      for (var y = top; y < bottom; y++)\r\n      {\r\n        var offset = y * this.rowSize;\r\n        for (var x = left; x < right; x++)\r\n        {\r\n          this.bits[offset + (x >> 5)] |= 1 << (x & 0x1f);\r\n        }\r\n      }\r\n    }\r\n}\r\n\r\nmodule.exports = BitMatrix"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}