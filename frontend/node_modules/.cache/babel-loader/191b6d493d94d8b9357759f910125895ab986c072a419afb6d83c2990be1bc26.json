{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alizhetpis/Documents/duken/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/alizhetpis/Documents/duken/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/alizhetpis/Documents/duken/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/Users/alizhetpis/Documents/duken/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useContext,useReducer,useState,useEffect}from'react';import{Helmet}from'react-helmet-async';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import{Store}from'../Store';import{toast}from'react-toastify';import{getError}from'../utils';import axios from'axios';import QRCode from'qrcode.react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var reducer=function reducer(state,action){switch(action.type){case'UPDATE_REQUEST':return _objectSpread(_objectSpread({},state),{},{loadingUpdate:true});case'UPDATE_SUCCESS':return _objectSpread(_objectSpread({},state),{},{loadingUpdate:false});case'UPDATE_FAIL':return _objectSpread(_objectSpread({},state),{},{loadingUpdate:false});default:return state;}};export default function ProfileScreen(){var _useContext=useContext(Store),state=_useContext.state,ctxDispatch=_useContext.dispatch;var userInfo=state.userInfo;var _useState=useState(userInfo.name),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(userInfo.email),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(JSON.parse(localStorage.getItem('enable2FA'))||false),_useState10=_slicedToArray(_useState9,2),enable2FA=_useState10[0],setEnable2FA=_useState10[1];// Initialize with the value from local storage\nvar _useReducer=useReducer(reducer,{loadingUpdate:false}),_useReducer2=_slicedToArray(_useReducer,2),loadingUpdate=_useReducer2[0].loadingUpdate,dispatch=_useReducer2[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),qrCodeDataUrl=_useState12[0],setQRCodeDataUrl=_useState12[1];var submitHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var userData,_yield$axios$put,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:e.preventDefault();// Данные, которые будут отправлены на сервер:\nuserData={name:name,email:email,password:password,confirmPassword:confirmPassword,enable2FA:enable2FA};// Логируем эти данные:\nconsole.log(\"Sending the following data to the server:\",userData);_context.prev=3;_context.next=6;return axios.put('/api/users/profile',userData,{headers:{Authorization:\"Bearer \".concat(userInfo.token)}});case 6:_yield$axios$put=_context.sent;data=_yield$axios$put.data;dispatch({type:'UPDATE_SUCCESS'});ctxDispatch({type:'USER_SIGNIN',payload:data});localStorage.setItem('userInfo',JSON.stringify(data));toast.success('User updated successfully');_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](3);dispatch({type:'FETCH_FAIL'});toast.error(getError(_context.t0));case 18:case\"end\":return _context.stop();}},_callee,null,[[3,14]]);}));return function submitHandler(_x){return _ref.apply(this,arguments);};}();var toggle2FAHandler=function toggle2FAHandler(){if(!enable2FA){// Generate a secret for 2FA (you can modify this as needed)\nvar secret='your-secret-key';// Generate the 2FA QR code URL\nvar qrCodeUrl=\"otpauth://totp/Duken:\".concat(userInfo.email,\"?secret=\").concat(secret,\"&issuer=Duken\");// Set the QR code data URL in state\nsetQRCodeDataUrl(qrCodeUrl);}else{// Clear the QR code data URL when disabling 2FA\nsetQRCodeDataUrl('');}// Toggle the 2FA status\nsetEnable2FA(!enable2FA);// Store the updated 'enable2FA' state in local storage\nlocalStorage.setItem('enable2FA',JSON.stringify(!enable2FA));};useEffect(function(){// Cleanup function to clear the 'qrCodeDataUrl' when unmounting the component\nreturn function(){return setQRCodeDataUrl('');};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container small-container\",children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\"User Profile\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"my-3\",children:\"User Profile\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{value:name,onChange:function onChange(e){return setName(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"enable2FA\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"switch\",id:\"custom-switch\",label:\"Enable 2FA\",checked:enable2FA,onChange:toggle2FAHandler})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:qrCodeDataUrl&&/*#__PURE__*/_jsx(QRCode,{value:qrCodeDataUrl})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Update\"})})]})]});}","map":{"version":3,"names":["React","useContext","useReducer","useState","useEffect","Helmet","Form","Button","Store","toast","getError","axios","QRCode","reducer","state","action","type","loadingUpdate","ProfileScreen","ctxDispatch","dispatch","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","JSON","parse","localStorage","getItem","enable2FA","setEnable2FA","qrCodeDataUrl","setQRCodeDataUrl","submitHandler","e","preventDefault","userData","console","log","put","headers","Authorization","token","data","payload","setItem","stringify","success","error","toggle2FAHandler","secret","qrCodeUrl","target","value"],"sources":["/Users/alizhetpis/Documents/duken/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useContext, useReducer, useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport QRCode from 'qrcode.react';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [enable2FA, setEnable2FA] = useState(\n    JSON.parse(localStorage.getItem('enable2FA')) || false\n  ); // Initialize with the value from local storage\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const [qrCodeDataUrl, setQRCodeDataUrl] = useState('');\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n  \n    // Данные, которые будут отправлены на сервер:\n    const userData = {\n      name,\n      email,\n      password,\n      confirmPassword,\n      enable2FA,\n    };\n  \n    // Логируем эти данные:\n    console.log(\"Sending the following data to the server:\", userData);\n  \n    try {\n      const { data } = await axios.put(\n        '/api/users/profile',\n        userData,\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: 'UPDATE_SUCCESS',\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL',\n      });\n      toast.error(getError(err));\n    }\n  };\n  \n\n  const toggle2FAHandler = () => {\n    if (!enable2FA) {\n      // Generate a secret for 2FA (you can modify this as needed)\n      const secret = 'your-secret-key';\n\n      // Generate the 2FA QR code URL\n      const qrCodeUrl = `otpauth://totp/Duken:${userInfo.email}?secret=${secret}&issuer=Duken`;\n\n      // Set the QR code data URL in state\n      setQRCodeDataUrl(qrCodeUrl);\n    } else {\n      // Clear the QR code data URL when disabling 2FA\n      setQRCodeDataUrl('');\n    }\n\n    // Toggle the 2FA status\n    setEnable2FA(!enable2FA);\n\n    // Store the updated 'enable2FA' state in local storage\n    localStorage.setItem('enable2FA', JSON.stringify(!enable2FA));\n  };\n\n  useEffect(() => {\n    // Cleanup function to clear the 'qrCodeDataUrl' when unmounting the component\n    return () => setQRCodeDataUrl('');\n  }, []);\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      <form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"enable2FA\">\n          <Form.Check\n            type=\"switch\"\n            id=\"custom-switch\"\n            label=\"Enable 2FA\"\n            checked={enable2FA}\n            onChange={toggle2FAHandler}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          {/* Render the QR code using the 'QRCode' component */}\n          {qrCodeDataUrl && <QRCode value={qrCodeDataUrl} />}\n        </div>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}