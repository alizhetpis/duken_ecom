{"ast":null,"code":"var _jsxFileName = \"/Users/alizhetpis/Documents/duken/frontend/src/screens/Enable2FAScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Enable2FAScreen() {\n  _s();\n  const [token, setToken] = useState('');\n  useEffect(() => {\n    const enable2FA = async () => {\n      try {\n        // Отправляем запрос на включение 2FA на сервер\n        const response = await axios.post('/api/users/enable-2fa', {\n          email: 'user@example.com',\n          // Замените на реальный email пользователя\n          password: 'password' // Замените на реальный пароль пользователя\n        });\n\n        // Если включение 2FA прошло успешно и сервер вернул токен\n        if (response.data.token) {\n          // Сохраняем токен в localStorage\n          localStorage.setItem('2faToken', response.data.token);\n\n          // Сохраняем токен также в состоянии компонента, если нужно\n          setToken(response.data.token);\n          toast.success('2FA enabled successfully');\n        } else {\n          toast.error('Failed to enable 2FA');\n        }\n      } catch (error) {\n        toast.error('Error enabling 2FA');\n      }\n    };\n    enable2FA();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enable 2FA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"2FA Token: \", token]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Enable2FAScreen, \"vf+oyXHY90mQMbpq6nUOg8QmBuc=\");\n_c = Enable2FAScreen;\nvar _c;\n$RefreshReg$(_c, \"Enable2FAScreen\");","map":{"version":3,"names":["React","useEffect","useState","toast","axios","Enable2FAScreen","token","setToken","enable2FA","response","post","email","password","data","localStorage","setItem","success","error"],"sources":["/Users/alizhetpis/Documents/duken/frontend/src/screens/Enable2FAScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\n\nexport default function Enable2FAScreen() {\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    const enable2FA = async () => {\n      try {\n        // Отправляем запрос на включение 2FA на сервер\n        const response = await axios.post('/api/users/enable-2fa', {\n          email: 'user@example.com', // Замените на реальный email пользователя\n          password: 'password',       // Замените на реальный пароль пользователя\n        });\n\n        // Если включение 2FA прошло успешно и сервер вернул токен\n        if (response.data.token) {\n          // Сохраняем токен в localStorage\n          localStorage.setItem('2faToken', response.data.token);\n\n          // Сохраняем токен также в состоянии компонента, если нужно\n          setToken(response.data.token);\n\n          toast.success('2FA enabled successfully');\n        } else {\n          toast.error('Failed to enable 2FA');\n        }\n      } catch (error) {\n        toast.error('Error enabling 2FA');\n      }\n    };\n\n    enable2FA();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Enable 2FA</h1>\n      <p>2FA Token: {token}</p> {/* Отобразите токен на экране, чтобы пользователь мог видеть его */}\n      {/* Другие элементы интерфейса для включения 2FA */}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,eAAe,GAAG;EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,uBAAuB,EAAE;UACzDC,KAAK,EAAE,kBAAkB;UAAE;UAC3BC,QAAQ,EAAE,UAAU,CAAQ;QAC9B,CAAC,CAAC;;QAEF;QACA,IAAIH,QAAQ,CAACI,IAAI,CAACP,KAAK,EAAE;UACvB;UACAQ,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEN,QAAQ,CAACI,IAAI,CAACP,KAAK,CAAC;;UAErD;UACAC,QAAQ,CAACE,QAAQ,CAACI,IAAI,CAACP,KAAK,CAAC;UAE7BH,KAAK,CAACa,OAAO,CAAC,0BAA0B,CAAC;QAC3C,CAAC,MAAM;UACLb,KAAK,CAACc,KAAK,CAAC,sBAAsB,CAAC;QACrC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdd,KAAK,CAACc,KAAK,CAAC,oBAAoB,CAAC;MACnC;IACF,CAAC;IAEDT,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eACnB;MAAA,WAAG,aAAW,EAACF,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,KAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEtB;AAEV;AAAC,GAvCuBD,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}