{"ast":null,"code":"var _jsxFileName = \"/Users/alizhetpis/Documents/duken/frontend/src/screens/Enable2FAScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Enable2FAScreen() {\n  _s();\n  const [token, setToken] = useState('');\n  const [setupKey, setSetupKey] = useState('');\n  useEffect(() => {\n    const enable2FA = async () => {\n      try {\n        // Send a request to enable 2FA on the server\n        const response = await axios.post('/api/users/enable-2fa', {\n          email: 'user@example.com',\n          // Replace with the actual user's email\n          password: 'password',\n          // Replace with the actual user's password\n          setupKey // Include the setupKey in the request\n        });\n\n        // If enabling 2FA was successful and the server returned a token\n        if (response.data.token) {\n          // Save the token in localStorage\n          localStorage.setItem('2faToken', response.data.token);\n\n          // Also save the token in the component's state if needed\n          setToken(response.data.token);\n          toast.success('2FA enabled successfully');\n        } else {\n          toast.error('Failed to enable 2FA');\n        }\n      } catch (error) {\n        toast.error('Error enabling 2FA');\n      }\n    };\n    enable2FA();\n  }, [setupKey]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enable 2FA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"2FA Token: \", token]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"setupKey\",\n          className: \"form-label\",\n          children: \"2FA Setup Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"setupKey\",\n          value: setupKey,\n          onChange: e => setSetupKey(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Enable 2FA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Enable2FAScreen, \"qqEVaklagXIiEjjwcxCtGwUtubo=\");\n_c = Enable2FAScreen;\nvar _c;\n$RefreshReg$(_c, \"Enable2FAScreen\");","map":{"version":3,"names":["React","useEffect","useState","toast","axios","Enable2FAScreen","token","setToken","setupKey","setSetupKey","enable2FA","response","post","email","password","data","localStorage","setItem","success","error","e","preventDefault","target","value"],"sources":["/Users/alizhetpis/Documents/duken/frontend/src/screens/Enable2FAScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\n\nexport default function Enable2FAScreen() {\n  const [token, setToken] = useState('');\n  const [setupKey, setSetupKey] = useState('');\n\n  useEffect(() => {\n    const enable2FA = async () => {\n      try {\n        // Send a request to enable 2FA on the server\n        const response = await axios.post('/api/users/enable-2fa', {\n          email: 'user@example.com', // Replace with the actual user's email\n          password: 'password',      // Replace with the actual user's password\n          setupKey,                  // Include the setupKey in the request\n        });\n\n        // If enabling 2FA was successful and the server returned a token\n        if (response.data.token) {\n          // Save the token in localStorage\n          localStorage.setItem('2faToken', response.data.token);\n\n          // Also save the token in the component's state if needed\n          setToken(response.data.token);\n\n          toast.success('2FA enabled successfully');\n        } else {\n          toast.error('Failed to enable 2FA');\n        }\n      } catch (error) {\n        toast.error('Error enabling 2FA');\n      }\n    };\n\n    enable2FA();\n  }, [setupKey]);\n\n  return (\n    <div className=\"container\">\n      <h1>Enable 2FA</h1>\n      <p>2FA Token: {token}</p> {/* Display the token on the screen for the user to see */}\n      <form onSubmit={(e) => e.preventDefault()}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"setupKey\" className=\"form-label\">\n            2FA Setup Key:\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"setupKey\"\n            value={setupKey}\n            onChange={(e) => setSetupKey(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Enable 2FA\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,eAAe,GAAG;EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,uBAAuB,EAAE;UACzDC,KAAK,EAAE,kBAAkB;UAAE;UAC3BC,QAAQ,EAAE,UAAU;UAAO;UAC3BN,QAAQ,CAAmB;QAC7B,CAAC,CAAC;;QAEF;QACA,IAAIG,QAAQ,CAACI,IAAI,CAACT,KAAK,EAAE;UACvB;UACAU,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEN,QAAQ,CAACI,IAAI,CAACT,KAAK,CAAC;;UAErD;UACAC,QAAQ,CAACI,QAAQ,CAACI,IAAI,CAACT,KAAK,CAAC;UAE7BH,KAAK,CAACe,OAAO,CAAC,0BAA0B,CAAC;QAC3C,CAAC,MAAM;UACLf,KAAK,CAACgB,KAAK,CAAC,sBAAsB,CAAC;QACrC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdhB,KAAK,CAACgB,KAAK,CAAC,oBAAoB,CAAC;MACnC;IACF,CAAC;IAEDT,SAAS,EAAE;EACb,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eACnB;MAAA,WAAG,aAAW,EAACF,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,KAAC,eAC1B;MAAM,QAAQ,EAAGc,CAAC,IAAKA,CAAC,CAACC,cAAc,EAAG;MAAA,wBACxC;QAAK,SAAS,EAAC,MAAM;QAAA,wBACnB;UAAO,OAAO,EAAC,UAAU;UAAC,SAAS,EAAC,YAAY;UAAA,UAAC;QAEjD;UAAA;UAAA;UAAA;QAAA,QAAQ,eACR;UACE,IAAI,EAAC,MAAM;UACX,SAAS,EAAC,cAAc;UACxB,EAAE,EAAC,UAAU;UACb,KAAK,EAAEb,QAAS;UAChB,QAAQ,EAAGY,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAC7C,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,iBAAiB;QAAA,UAAC;MAElD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GA1DuBlB,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}