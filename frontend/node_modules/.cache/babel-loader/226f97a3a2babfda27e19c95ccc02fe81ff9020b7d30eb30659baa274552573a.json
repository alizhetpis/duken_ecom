{"ast":null,"code":"/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\n\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\n\nvar BitMatrix = require('./bitmat');\nvar FormatInformation = require('./formatinf');\nfunction ECB(count, dataCodewords) {\n  this.count = count;\n  this.dataCodewords = dataCodewords;\n  this.__defineGetter__(\"Count\", function () {\n    return this.count;\n  });\n  this.__defineGetter__(\"DataCodewords\", function () {\n    return this.dataCodewords;\n  });\n}\nfunction ECBlocks(ecCodewordsPerBlock, ecBlocks1, ecBlocks2) {\n  this.ecCodewordsPerBlock = ecCodewordsPerBlock;\n  if (ecBlocks2) this.ecBlocks = new Array(ecBlocks1, ecBlocks2);else this.ecBlocks = new Array(ecBlocks1);\n  this.__defineGetter__(\"ECCodewordsPerBlock\", function () {\n    return this.ecCodewordsPerBlock;\n  });\n  this.__defineGetter__(\"TotalECCodewords\", function () {\n    return this.ecCodewordsPerBlock * this.NumBlocks;\n  });\n  this.__defineGetter__(\"NumBlocks\", function () {\n    var total = 0;\n    for (var i = 0; i < this.ecBlocks.length; i++) {\n      total += this.ecBlocks[i].length;\n    }\n    return total;\n  });\n  this.getECBlocks = function () {\n    return this.ecBlocks;\n  };\n}\nfunction Version(versionNumber, alignmentPatternCenters, ecBlocks1, ecBlocks2, ecBlocks3, ecBlocks4) {\n  this.versionNumber = versionNumber;\n  this.alignmentPatternCenters = alignmentPatternCenters;\n  this.ecBlocks = new Array(ecBlocks1, ecBlocks2, ecBlocks3, ecBlocks4);\n  var total = 0;\n  var ecCodewords = ecBlocks1.ECCodewordsPerBlock;\n  var ecbArray = ecBlocks1.getECBlocks();\n  for (var i = 0; i < ecbArray.length; i++) {\n    var ecBlock = ecbArray[i];\n    total += ecBlock.Count * (ecBlock.DataCodewords + ecCodewords);\n  }\n  this.totalCodewords = total;\n  this.__defineGetter__(\"VersionNumber\", function () {\n    return this.versionNumber;\n  });\n  this.__defineGetter__(\"AlignmentPatternCenters\", function () {\n    return this.alignmentPatternCenters;\n  });\n  this.__defineGetter__(\"TotalCodewords\", function () {\n    return this.totalCodewords;\n  });\n  this.__defineGetter__(\"DimensionForVersion\", function () {\n    return 17 + 4 * this.versionNumber;\n  });\n  this.buildFunctionPattern = function () {\n    var dimension = this.DimensionForVersion;\n    var bitMatrix = new BitMatrix(dimension);\n\n    // Top left finder pattern + separator + format\n    bitMatrix.setRegion(0, 0, 9, 9);\n    // Top right finder pattern + separator + format\n    bitMatrix.setRegion(dimension - 8, 0, 8, 9);\n    // Bottom left finder pattern + separator + format\n    bitMatrix.setRegion(0, dimension - 8, 9, 8);\n\n    // Alignment patterns\n    var max = this.alignmentPatternCenters.length;\n    for (var x = 0; x < max; x++) {\n      var i = this.alignmentPatternCenters[x] - 2;\n      for (var y = 0; y < max; y++) {\n        if (x == 0 && (y == 0 || y == max - 1) || x == max - 1 && y == 0) {\n          // No alignment patterns near the three finder paterns\n          continue;\n        }\n        bitMatrix.setRegion(this.alignmentPatternCenters[y] - 2, i, 5, 5);\n      }\n    }\n\n    // Vertical timing pattern\n    bitMatrix.setRegion(6, 9, 1, dimension - 17);\n    // Horizontal timing pattern\n    bitMatrix.setRegion(9, 6, dimension - 17, 1);\n    if (this.versionNumber > 6) {\n      // Version info, top right\n      bitMatrix.setRegion(dimension - 11, 0, 3, 6);\n      // Version info, bottom left\n      bitMatrix.setRegion(0, dimension - 11, 6, 3);\n    }\n    return bitMatrix;\n  };\n  this.getECBlocksForLevel = function (ecLevel) {\n    return this.ecBlocks[ecLevel.ordinal()];\n  };\n}\nVersion.VERSION_DECODE_INFO = new Array(0x07C94, 0x085BC, 0x09A99, 0x0A4D3, 0x0BBF6, 0x0C762, 0x0D847, 0x0E60D, 0x0F928, 0x10B78, 0x1145D, 0x12A17, 0x13532, 0x149A6, 0x15683, 0x168C9, 0x177EC, 0x18EC4, 0x191E1, 0x1AFAB, 0x1B08E, 0x1CC1A, 0x1D33F, 0x1ED75, 0x1F250, 0x209D5, 0x216F0, 0x228BA, 0x2379F, 0x24B0B, 0x2542E, 0x26A64, 0x27541, 0x28C69);\nVersion.VERSIONS = buildVersions();\nVersion.getVersionForNumber = function (versionNumber) {\n  if (versionNumber < 1 || versionNumber > 40) {\n    throw \"ArgumentException\";\n  }\n  return Version.VERSIONS[versionNumber - 1];\n};\nVersion.getProvisionalVersionForDimension = function (dimension) {\n  if (dimension % 4 != 1) {\n    throw \"Error getProvisionalVersionForDimension\";\n  }\n  try {\n    return Version.getVersionForNumber(dimension - 17 >> 2);\n  } catch (iae) {\n    throw \"Error getVersionForNumber\";\n  }\n};\nVersion.decodeVersionInformation = function (versionBits) {\n  var bestDifference = 0xffffffff;\n  var bestVersion = 0;\n  for (var i = 0; i < Version.VERSION_DECODE_INFO.length; i++) {\n    var targetVersion = Version.VERSION_DECODE_INFO[i];\n    // Do the version info bits match exactly? done.\n    if (targetVersion == versionBits) {\n      return this.getVersionForNumber(i + 7);\n    }\n    // Otherwise see if this is the closest to a real version info bit string\n    // we have seen so far\n    var bitsDifference = FormatInformation.numBitsDiffering(versionBits, targetVersion);\n    if (bitsDifference < bestDifference) {\n      bestVersion = i + 7;\n      bestDifference = bitsDifference;\n    }\n  }\n  // We can tolerate up to 3 bits of error since no two version info codewords will\n  // differ in less than 4 bits.\n  if (bestDifference <= 3) {\n    return this.getVersionForNumber(bestVersion);\n  }\n  // If we didn't find a close enough match, fail\n  return null;\n};\nfunction buildVersions() {\n  return new Array(new Version(1, new Array(), new ECBlocks(7, new ECB(1, 19)), new ECBlocks(10, new ECB(1, 16)), new ECBlocks(13, new ECB(1, 13)), new ECBlocks(17, new ECB(1, 9))), new Version(2, new Array(6, 18), new ECBlocks(10, new ECB(1, 34)), new ECBlocks(16, new ECB(1, 28)), new ECBlocks(22, new ECB(1, 22)), new ECBlocks(28, new ECB(1, 16))), new Version(3, new Array(6, 22), new ECBlocks(15, new ECB(1, 55)), new ECBlocks(26, new ECB(1, 44)), new ECBlocks(18, new ECB(2, 17)), new ECBlocks(22, new ECB(2, 13))), new Version(4, new Array(6, 26), new ECBlocks(20, new ECB(1, 80)), new ECBlocks(18, new ECB(2, 32)), new ECBlocks(26, new ECB(2, 24)), new ECBlocks(16, new ECB(4, 9))), new Version(5, new Array(6, 30), new ECBlocks(26, new ECB(1, 108)), new ECBlocks(24, new ECB(2, 43)), new ECBlocks(18, new ECB(2, 15), new ECB(2, 16)), new ECBlocks(22, new ECB(2, 11), new ECB(2, 12))), new Version(6, new Array(6, 34), new ECBlocks(18, new ECB(2, 68)), new ECBlocks(16, new ECB(4, 27)), new ECBlocks(24, new ECB(4, 19)), new ECBlocks(28, new ECB(4, 15))), new Version(7, new Array(6, 22, 38), new ECBlocks(20, new ECB(2, 78)), new ECBlocks(18, new ECB(4, 31)), new ECBlocks(18, new ECB(2, 14), new ECB(4, 15)), new ECBlocks(26, new ECB(4, 13), new ECB(1, 14))), new Version(8, new Array(6, 24, 42), new ECBlocks(24, new ECB(2, 97)), new ECBlocks(22, new ECB(2, 38), new ECB(2, 39)), new ECBlocks(22, new ECB(4, 18), new ECB(2, 19)), new ECBlocks(26, new ECB(4, 14), new ECB(2, 15))), new Version(9, new Array(6, 26, 46), new ECBlocks(30, new ECB(2, 116)), new ECBlocks(22, new ECB(3, 36), new ECB(2, 37)), new ECBlocks(20, new ECB(4, 16), new ECB(4, 17)), new ECBlocks(24, new ECB(4, 12), new ECB(4, 13))), new Version(10, new Array(6, 28, 50), new ECBlocks(18, new ECB(2, 68), new ECB(2, 69)), new ECBlocks(26, new ECB(4, 43), new ECB(1, 44)), new ECBlocks(24, new ECB(6, 19), new ECB(2, 20)), new ECBlocks(28, new ECB(6, 15), new ECB(2, 16))), new Version(11, new Array(6, 30, 54), new ECBlocks(20, new ECB(4, 81)), new ECBlocks(30, new ECB(1, 50), new ECB(4, 51)), new ECBlocks(28, new ECB(4, 22), new ECB(4, 23)), new ECBlocks(24, new ECB(3, 12), new ECB(8, 13))), new Version(12, new Array(6, 32, 58), new ECBlocks(24, new ECB(2, 92), new ECB(2, 93)), new ECBlocks(22, new ECB(6, 36), new ECB(2, 37)), new ECBlocks(26, new ECB(4, 20), new ECB(6, 21)), new ECBlocks(28, new ECB(7, 14), new ECB(4, 15))), new Version(13, new Array(6, 34, 62), new ECBlocks(26, new ECB(4, 107)), new ECBlocks(22, new ECB(8, 37), new ECB(1, 38)), new ECBlocks(24, new ECB(8, 20), new ECB(4, 21)), new ECBlocks(22, new ECB(12, 11), new ECB(4, 12))), new Version(14, new Array(6, 26, 46, 66), new ECBlocks(30, new ECB(3, 115), new ECB(1, 116)), new ECBlocks(24, new ECB(4, 40), new ECB(5, 41)), new ECBlocks(20, new ECB(11, 16), new ECB(5, 17)), new ECBlocks(24, new ECB(11, 12), new ECB(5, 13))), new Version(15, new Array(6, 26, 48, 70), new ECBlocks(22, new ECB(5, 87), new ECB(1, 88)), new ECBlocks(24, new ECB(5, 41), new ECB(5, 42)), new ECBlocks(30, new ECB(5, 24), new ECB(7, 25)), new ECBlocks(24, new ECB(11, 12), new ECB(7, 13))), new Version(16, new Array(6, 26, 50, 74), new ECBlocks(24, new ECB(5, 98), new ECB(1, 99)), new ECBlocks(28, new ECB(7, 45), new ECB(3, 46)), new ECBlocks(24, new ECB(15, 19), new ECB(2, 20)), new ECBlocks(30, new ECB(3, 15), new ECB(13, 16))), new Version(17, new Array(6, 30, 54, 78), new ECBlocks(28, new ECB(1, 107), new ECB(5, 108)), new ECBlocks(28, new ECB(10, 46), new ECB(1, 47)), new ECBlocks(28, new ECB(1, 22), new ECB(15, 23)), new ECBlocks(28, new ECB(2, 14), new ECB(17, 15))), new Version(18, new Array(6, 30, 56, 82), new ECBlocks(30, new ECB(5, 120), new ECB(1, 121)), new ECBlocks(26, new ECB(9, 43), new ECB(4, 44)), new ECBlocks(28, new ECB(17, 22), new ECB(1, 23)), new ECBlocks(28, new ECB(2, 14), new ECB(19, 15))), new Version(19, new Array(6, 30, 58, 86), new ECBlocks(28, new ECB(3, 113), new ECB(4, 114)), new ECBlocks(26, new ECB(3, 44), new ECB(11, 45)), new ECBlocks(26, new ECB(17, 21), new ECB(4, 22)), new ECBlocks(26, new ECB(9, 13), new ECB(16, 14))), new Version(20, new Array(6, 34, 62, 90), new ECBlocks(28, new ECB(3, 107), new ECB(5, 108)), new ECBlocks(26, new ECB(3, 41), new ECB(13, 42)), new ECBlocks(30, new ECB(15, 24), new ECB(5, 25)), new ECBlocks(28, new ECB(15, 15), new ECB(10, 16))), new Version(21, new Array(6, 28, 50, 72, 94), new ECBlocks(28, new ECB(4, 116), new ECB(4, 117)), new ECBlocks(26, new ECB(17, 42)), new ECBlocks(28, new ECB(17, 22), new ECB(6, 23)), new ECBlocks(30, new ECB(19, 16), new ECB(6, 17))), new Version(22, new Array(6, 26, 50, 74, 98), new ECBlocks(28, new ECB(2, 111), new ECB(7, 112)), new ECBlocks(28, new ECB(17, 46)), new ECBlocks(30, new ECB(7, 24), new ECB(16, 25)), new ECBlocks(24, new ECB(34, 13))), new Version(23, new Array(6, 30, 54, 74, 102), new ECBlocks(30, new ECB(4, 121), new ECB(5, 122)), new ECBlocks(28, new ECB(4, 47), new ECB(14, 48)), new ECBlocks(30, new ECB(11, 24), new ECB(14, 25)), new ECBlocks(30, new ECB(16, 15), new ECB(14, 16))), new Version(24, new Array(6, 28, 54, 80, 106), new ECBlocks(30, new ECB(6, 117), new ECB(4, 118)), new ECBlocks(28, new ECB(6, 45), new ECB(14, 46)), new ECBlocks(30, new ECB(11, 24), new ECB(16, 25)), new ECBlocks(30, new ECB(30, 16), new ECB(2, 17))), new Version(25, new Array(6, 32, 58, 84, 110), new ECBlocks(26, new ECB(8, 106), new ECB(4, 107)), new ECBlocks(28, new ECB(8, 47), new ECB(13, 48)), new ECBlocks(30, new ECB(7, 24), new ECB(22, 25)), new ECBlocks(30, new ECB(22, 15), new ECB(13, 16))), new Version(26, new Array(6, 30, 58, 86, 114), new ECBlocks(28, new ECB(10, 114), new ECB(2, 115)), new ECBlocks(28, new ECB(19, 46), new ECB(4, 47)), new ECBlocks(28, new ECB(28, 22), new ECB(6, 23)), new ECBlocks(30, new ECB(33, 16), new ECB(4, 17))), new Version(27, new Array(6, 34, 62, 90, 118), new ECBlocks(30, new ECB(8, 122), new ECB(4, 123)), new ECBlocks(28, new ECB(22, 45), new ECB(3, 46)), new ECBlocks(30, new ECB(8, 23), new ECB(26, 24)), new ECBlocks(30, new ECB(12, 15), new ECB(28, 16))), new Version(28, new Array(6, 26, 50, 74, 98, 122), new ECBlocks(30, new ECB(3, 117), new ECB(10, 118)), new ECBlocks(28, new ECB(3, 45), new ECB(23, 46)), new ECBlocks(30, new ECB(4, 24), new ECB(31, 25)), new ECBlocks(30, new ECB(11, 15), new ECB(31, 16))), new Version(29, new Array(6, 30, 54, 78, 102, 126), new ECBlocks(30, new ECB(7, 116), new ECB(7, 117)), new ECBlocks(28, new ECB(21, 45), new ECB(7, 46)), new ECBlocks(30, new ECB(1, 23), new ECB(37, 24)), new ECBlocks(30, new ECB(19, 15), new ECB(26, 16))), new Version(30, new Array(6, 26, 52, 78, 104, 130), new ECBlocks(30, new ECB(5, 115), new ECB(10, 116)), new ECBlocks(28, new ECB(19, 47), new ECB(10, 48)), new ECBlocks(30, new ECB(15, 24), new ECB(25, 25)), new ECBlocks(30, new ECB(23, 15), new ECB(25, 16))), new Version(31, new Array(6, 30, 56, 82, 108, 134), new ECBlocks(30, new ECB(13, 115), new ECB(3, 116)), new ECBlocks(28, new ECB(2, 46), new ECB(29, 47)), new ECBlocks(30, new ECB(42, 24), new ECB(1, 25)), new ECBlocks(30, new ECB(23, 15), new ECB(28, 16))), new Version(32, new Array(6, 34, 60, 86, 112, 138), new ECBlocks(30, new ECB(17, 115)), new ECBlocks(28, new ECB(10, 46), new ECB(23, 47)), new ECBlocks(30, new ECB(10, 24), new ECB(35, 25)), new ECBlocks(30, new ECB(19, 15), new ECB(35, 16))), new Version(33, new Array(6, 30, 58, 86, 114, 142), new ECBlocks(30, new ECB(17, 115), new ECB(1, 116)), new ECBlocks(28, new ECB(14, 46), new ECB(21, 47)), new ECBlocks(30, new ECB(29, 24), new ECB(19, 25)), new ECBlocks(30, new ECB(11, 15), new ECB(46, 16))), new Version(34, new Array(6, 34, 62, 90, 118, 146), new ECBlocks(30, new ECB(13, 115), new ECB(6, 116)), new ECBlocks(28, new ECB(14, 46), new ECB(23, 47)), new ECBlocks(30, new ECB(44, 24), new ECB(7, 25)), new ECBlocks(30, new ECB(59, 16), new ECB(1, 17))), new Version(35, new Array(6, 30, 54, 78, 102, 126, 150), new ECBlocks(30, new ECB(12, 121), new ECB(7, 122)), new ECBlocks(28, new ECB(12, 47), new ECB(26, 48)), new ECBlocks(30, new ECB(39, 24), new ECB(14, 25)), new ECBlocks(30, new ECB(22, 15), new ECB(41, 16))), new Version(36, new Array(6, 24, 50, 76, 102, 128, 154), new ECBlocks(30, new ECB(6, 121), new ECB(14, 122)), new ECBlocks(28, new ECB(6, 47), new ECB(34, 48)), new ECBlocks(30, new ECB(46, 24), new ECB(10, 25)), new ECBlocks(30, new ECB(2, 15), new ECB(64, 16))), new Version(37, new Array(6, 28, 54, 80, 106, 132, 158), new ECBlocks(30, new ECB(17, 122), new ECB(4, 123)), new ECBlocks(28, new ECB(29, 46), new ECB(14, 47)), new ECBlocks(30, new ECB(49, 24), new ECB(10, 25)), new ECBlocks(30, new ECB(24, 15), new ECB(46, 16))), new Version(38, new Array(6, 32, 58, 84, 110, 136, 162), new ECBlocks(30, new ECB(4, 122), new ECB(18, 123)), new ECBlocks(28, new ECB(13, 46), new ECB(32, 47)), new ECBlocks(30, new ECB(48, 24), new ECB(14, 25)), new ECBlocks(30, new ECB(42, 15), new ECB(32, 16))), new Version(39, new Array(6, 26, 54, 82, 110, 138, 166), new ECBlocks(30, new ECB(20, 117), new ECB(4, 118)), new ECBlocks(28, new ECB(40, 47), new ECB(7, 48)), new ECBlocks(30, new ECB(43, 24), new ECB(22, 25)), new ECBlocks(30, new ECB(10, 15), new ECB(67, 16))), new Version(40, new Array(6, 30, 58, 86, 114, 142, 170), new ECBlocks(30, new ECB(19, 118), new ECB(6, 119)), new ECBlocks(28, new ECB(18, 47), new ECB(31, 48)), new ECBlocks(30, new ECB(34, 24), new ECB(34, 25)), new ECBlocks(30, new ECB(20, 15), new ECB(61, 16))));\n}\nmodule.exports = Version;","map":{"version":3,"names":["BitMatrix","require","FormatInformation","ECB","count","dataCodewords","__defineGetter__","ECBlocks","ecCodewordsPerBlock","ecBlocks1","ecBlocks2","ecBlocks","Array","NumBlocks","total","i","length","getECBlocks","Version","versionNumber","alignmentPatternCenters","ecBlocks3","ecBlocks4","ecCodewords","ECCodewordsPerBlock","ecbArray","ecBlock","Count","DataCodewords","totalCodewords","buildFunctionPattern","dimension","DimensionForVersion","bitMatrix","setRegion","max","x","y","getECBlocksForLevel","ecLevel","ordinal","VERSION_DECODE_INFO","VERSIONS","buildVersions","getVersionForNumber","getProvisionalVersionForDimension","iae","decodeVersionInformation","versionBits","bestDifference","bestVersion","targetVersion","bitsDifference","numBitsDiffering","module","exports"],"sources":["/Users/alizhetpis/Documents/duken/frontend/node_modules/jsqrcode/src/version.js"],"sourcesContent":["/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nvar BitMatrix = require('./bitmat');\r\nvar FormatInformation = require('./formatinf');\r\n\r\nfunction ECB(count,  dataCodewords)\r\n{\r\n  this.count = count;\r\n  this.dataCodewords = dataCodewords;\r\n  \r\n  this.__defineGetter__(\"Count\", function()\r\n  {\r\n    return this.count;\r\n  });\r\n  this.__defineGetter__(\"DataCodewords\", function()\r\n  {\r\n    return this.dataCodewords;\r\n  });\r\n}\r\n\r\nfunction ECBlocks( ecCodewordsPerBlock,  ecBlocks1,  ecBlocks2)\r\n{\r\n  this.ecCodewordsPerBlock = ecCodewordsPerBlock;\r\n  if(ecBlocks2)\r\n    this.ecBlocks = new Array(ecBlocks1, ecBlocks2);\r\n  else\r\n    this.ecBlocks = new Array(ecBlocks1);\r\n  \r\n  this.__defineGetter__(\"ECCodewordsPerBlock\", function()\r\n  {\r\n    return this.ecCodewordsPerBlock;\r\n  });\r\n  \r\n  this.__defineGetter__(\"TotalECCodewords\", function()\r\n  {\r\n    return  this.ecCodewordsPerBlock * this.NumBlocks;\r\n  });\r\n  \r\n  this.__defineGetter__(\"NumBlocks\", function()\r\n  {\r\n    var total = 0;\r\n    for (var i = 0; i < this.ecBlocks.length; i++)\r\n    {\r\n      total += this.ecBlocks[i].length;\r\n    }\r\n    return total;\r\n  });\r\n  \r\n  this.getECBlocks=function()\r\n      {\r\n        return this.ecBlocks;\r\n      }\r\n}\r\n\r\nfunction Version( versionNumber,  alignmentPatternCenters,  ecBlocks1,  ecBlocks2,  ecBlocks3,  ecBlocks4)\r\n{\r\n  this.versionNumber = versionNumber;\r\n  this.alignmentPatternCenters = alignmentPatternCenters;\r\n  this.ecBlocks = new Array(ecBlocks1, ecBlocks2, ecBlocks3, ecBlocks4);\r\n  \r\n  var total = 0;\r\n  var ecCodewords = ecBlocks1.ECCodewordsPerBlock;\r\n  var ecbArray = ecBlocks1.getECBlocks();\r\n  for (var i = 0; i < ecbArray.length; i++)\r\n  {\r\n    var ecBlock = ecbArray[i];\r\n    total += ecBlock.Count * (ecBlock.DataCodewords + ecCodewords);\r\n  }\r\n  this.totalCodewords = total;\r\n  \r\n  this.__defineGetter__(\"VersionNumber\", function()\r\n  {\r\n    return  this.versionNumber;\r\n  });\r\n  \r\n  this.__defineGetter__(\"AlignmentPatternCenters\", function()\r\n  {\r\n    return  this.alignmentPatternCenters;\r\n  });\r\n  this.__defineGetter__(\"TotalCodewords\", function()\r\n  {\r\n    return  this.totalCodewords;\r\n  });\r\n  this.__defineGetter__(\"DimensionForVersion\", function()\r\n  {\r\n    return  17 + 4 * this.versionNumber;\r\n  });\r\n  \r\n  this.buildFunctionPattern=function()\r\n    {\r\n      var dimension = this.DimensionForVersion;\r\n      var bitMatrix = new BitMatrix(dimension);\r\n      \r\n      // Top left finder pattern + separator + format\r\n      bitMatrix.setRegion(0, 0, 9, 9);\r\n      // Top right finder pattern + separator + format\r\n      bitMatrix.setRegion(dimension - 8, 0, 8, 9);\r\n      // Bottom left finder pattern + separator + format\r\n      bitMatrix.setRegion(0, dimension - 8, 9, 8);\r\n      \r\n      // Alignment patterns\r\n      var max = this.alignmentPatternCenters.length;\r\n      for (var x = 0; x < max; x++)\r\n      {\r\n        var i = this.alignmentPatternCenters[x] - 2;\r\n        for (var y = 0; y < max; y++)\r\n        {\r\n          if ((x == 0 && (y == 0 || y == max - 1)) || (x == max - 1 && y == 0))\r\n          {\r\n            // No alignment patterns near the three finder paterns\r\n            continue;\r\n          }\r\n          bitMatrix.setRegion(this.alignmentPatternCenters[y] - 2, i, 5, 5);\r\n        }\r\n      }\r\n      \r\n      // Vertical timing pattern\r\n      bitMatrix.setRegion(6, 9, 1, dimension - 17);\r\n      // Horizontal timing pattern\r\n      bitMatrix.setRegion(9, 6, dimension - 17, 1);\r\n      \r\n      if (this.versionNumber > 6)\r\n      {\r\n        // Version info, top right\r\n        bitMatrix.setRegion(dimension - 11, 0, 3, 6);\r\n        // Version info, bottom left\r\n        bitMatrix.setRegion(0, dimension - 11, 6, 3);\r\n      }\r\n      \r\n      return bitMatrix;\r\n    }\r\n  this.getECBlocksForLevel=function( ecLevel)\r\n  {\r\n    return this.ecBlocks[ecLevel.ordinal()];\r\n  }\r\n}\r\n\r\nVersion.VERSION_DECODE_INFO = new Array(0x07C94, 0x085BC, 0x09A99, 0x0A4D3, 0x0BBF6, 0x0C762, 0x0D847, 0x0E60D, 0x0F928, 0x10B78, 0x1145D, 0x12A17, 0x13532, 0x149A6, 0x15683, 0x168C9, 0x177EC, 0x18EC4, 0x191E1, 0x1AFAB, 0x1B08E, 0x1CC1A, 0x1D33F, 0x1ED75, 0x1F250, 0x209D5, 0x216F0, 0x228BA, 0x2379F, 0x24B0B, 0x2542E, 0x26A64, 0x27541, 0x28C69);\r\n\r\nVersion.VERSIONS = buildVersions();\r\n\r\nVersion.getVersionForNumber=function( versionNumber)\r\n{\r\n  if (versionNumber < 1 || versionNumber > 40)\r\n  {\r\n    throw \"ArgumentException\";\r\n  }\r\n  return Version.VERSIONS[versionNumber - 1];\r\n}\r\n\r\nVersion.getProvisionalVersionForDimension=function(dimension)\r\n{\r\n  if (dimension % 4 != 1)\r\n  {\r\n    throw \"Error getProvisionalVersionForDimension\";\r\n  }\r\n  try\r\n  {\r\n    return Version.getVersionForNumber((dimension - 17) >> 2);\r\n  }\r\n  catch ( iae)\r\n  {\r\n    throw \"Error getVersionForNumber\";\r\n  }\r\n}\r\n\r\nVersion.decodeVersionInformation=function( versionBits)\r\n{\r\n  var bestDifference = 0xffffffff;\r\n  var bestVersion = 0;\r\n  for (var i = 0; i < Version.VERSION_DECODE_INFO.length; i++)\r\n  {\r\n    var targetVersion = Version.VERSION_DECODE_INFO[i];\r\n    // Do the version info bits match exactly? done.\r\n    if (targetVersion == versionBits)\r\n    {\r\n      return this.getVersionForNumber(i + 7);\r\n    }\r\n    // Otherwise see if this is the closest to a real version info bit string\r\n    // we have seen so far\r\n    var bitsDifference = FormatInformation.numBitsDiffering(versionBits, targetVersion);\r\n    if (bitsDifference < bestDifference)\r\n    {\r\n      bestVersion = i + 7;\r\n      bestDifference = bitsDifference;\r\n    }\r\n  }\r\n  // We can tolerate up to 3 bits of error since no two version info codewords will\r\n  // differ in less than 4 bits.\r\n  if (bestDifference <= 3)\r\n  {\r\n    return this.getVersionForNumber(bestVersion);\r\n  }\r\n  // If we didn't find a close enough match, fail\r\n  return null;\r\n}\r\n\r\nfunction buildVersions()\r\n{\r\n  return new Array(new Version(1, new Array(), new ECBlocks(7, new ECB(1, 19)), new ECBlocks(10, new ECB(1, 16)), new ECBlocks(13, new ECB(1, 13)), new ECBlocks(17, new ECB(1, 9))), \r\n  new Version(2, new Array(6, 18), new ECBlocks(10, new ECB(1, 34)), new ECBlocks(16, new ECB(1, 28)), new ECBlocks(22, new ECB(1, 22)), new ECBlocks(28, new ECB(1, 16))), \r\n  new Version(3, new Array(6, 22), new ECBlocks(15, new ECB(1, 55)), new ECBlocks(26, new ECB(1, 44)), new ECBlocks(18, new ECB(2, 17)), new ECBlocks(22, new ECB(2, 13))), \r\n  new Version(4, new Array(6, 26), new ECBlocks(20, new ECB(1, 80)), new ECBlocks(18, new ECB(2, 32)), new ECBlocks(26, new ECB(2, 24)), new ECBlocks(16, new ECB(4, 9))), \r\n  new Version(5, new Array(6, 30), new ECBlocks(26, new ECB(1, 108)), new ECBlocks(24, new ECB(2, 43)), new ECBlocks(18, new ECB(2, 15), new ECB(2, 16)), new ECBlocks(22, new ECB(2, 11), new ECB(2, 12))), \r\n  new Version(6, new Array(6, 34), new ECBlocks(18, new ECB(2, 68)), new ECBlocks(16, new ECB(4, 27)), new ECBlocks(24, new ECB(4, 19)), new ECBlocks(28, new ECB(4, 15))), \r\n  new Version(7, new Array(6, 22, 38), new ECBlocks(20, new ECB(2, 78)), new ECBlocks(18, new ECB(4, 31)), new ECBlocks(18, new ECB(2, 14), new ECB(4, 15)), new ECBlocks(26, new ECB(4, 13), new ECB(1, 14))), \r\n  new Version(8, new Array(6, 24, 42), new ECBlocks(24, new ECB(2, 97)), new ECBlocks(22, new ECB(2, 38), new ECB(2, 39)), new ECBlocks(22, new ECB(4, 18), new ECB(2, 19)), new ECBlocks(26, new ECB(4, 14), new ECB(2, 15))), \r\n  new Version(9, new Array(6, 26, 46), new ECBlocks(30, new ECB(2, 116)), new ECBlocks(22, new ECB(3, 36), new ECB(2, 37)), new ECBlocks(20, new ECB(4, 16), new ECB(4, 17)), new ECBlocks(24, new ECB(4, 12), new ECB(4, 13))), \r\n  new Version(10, new Array(6, 28, 50), new ECBlocks(18, new ECB(2, 68), new ECB(2, 69)), new ECBlocks(26, new ECB(4, 43), new ECB(1, 44)), new ECBlocks(24, new ECB(6, 19), new ECB(2, 20)), new ECBlocks(28, new ECB(6, 15), new ECB(2, 16))), \r\n  new Version(11, new Array(6, 30, 54), new ECBlocks(20, new ECB(4, 81)), new ECBlocks(30, new ECB(1, 50), new ECB(4, 51)), new ECBlocks(28, new ECB(4, 22), new ECB(4, 23)), new ECBlocks(24, new ECB(3, 12), new ECB(8, 13))), \r\n  new Version(12, new Array(6, 32, 58), new ECBlocks(24, new ECB(2, 92), new ECB(2, 93)), new ECBlocks(22, new ECB(6, 36), new ECB(2, 37)), new ECBlocks(26, new ECB(4, 20), new ECB(6, 21)), new ECBlocks(28, new ECB(7, 14), new ECB(4, 15))), \r\n  new Version(13, new Array(6, 34, 62), new ECBlocks(26, new ECB(4, 107)), new ECBlocks(22, new ECB(8, 37), new ECB(1, 38)), new ECBlocks(24, new ECB(8, 20), new ECB(4, 21)), new ECBlocks(22, new ECB(12, 11), new ECB(4, 12))), \r\n  new Version(14, new Array(6, 26, 46, 66), new ECBlocks(30, new ECB(3, 115), new ECB(1, 116)), new ECBlocks(24, new ECB(4, 40), new ECB(5, 41)), new ECBlocks(20, new ECB(11, 16), new ECB(5, 17)), new ECBlocks(24, new ECB(11, 12), new ECB(5, 13))), \r\n  new Version(15, new Array(6, 26, 48, 70), new ECBlocks(22, new ECB(5, 87), new ECB(1, 88)), new ECBlocks(24, new ECB(5, 41), new ECB(5, 42)), new ECBlocks(30, new ECB(5, 24), new ECB(7, 25)), new ECBlocks(24, new ECB(11, 12), new ECB(7, 13))), \r\n  new Version(16, new Array(6, 26, 50, 74), new ECBlocks(24, new ECB(5, 98), new ECB(1, 99)), new ECBlocks(28, new ECB(7, 45), new ECB(3, 46)), new ECBlocks(24, new ECB(15, 19), new ECB(2, 20)), new ECBlocks(30, new ECB(3, 15), new ECB(13, 16))), \r\n  new Version(17, new Array(6, 30, 54, 78), new ECBlocks(28, new ECB(1, 107), new ECB(5, 108)), new ECBlocks(28, new ECB(10, 46), new ECB(1, 47)), new ECBlocks(28, new ECB(1, 22), new ECB(15, 23)), new ECBlocks(28, new ECB(2, 14), new ECB(17, 15))), \r\n  new Version(18, new Array(6, 30, 56, 82), new ECBlocks(30, new ECB(5, 120), new ECB(1, 121)), new ECBlocks(26, new ECB(9, 43), new ECB(4, 44)), new ECBlocks(28, new ECB(17, 22), new ECB(1, 23)), new ECBlocks(28, new ECB(2, 14), new ECB(19, 15))), \r\n  new Version(19, new Array(6, 30, 58, 86), new ECBlocks(28, new ECB(3, 113), new ECB(4, 114)), new ECBlocks(26, new ECB(3, 44), new ECB(11, 45)), new ECBlocks(26, new ECB(17, 21), new ECB(4, 22)), new ECBlocks(26, new ECB(9, 13), new ECB(16, 14))), \r\n  new Version(20, new Array(6, 34, 62, 90), new ECBlocks(28, new ECB(3, 107), new ECB(5, 108)), new ECBlocks(26, new ECB(3, 41), new ECB(13, 42)), new ECBlocks(30, new ECB(15, 24), new ECB(5, 25)), new ECBlocks(28, new ECB(15, 15), new ECB(10, 16))), \r\n  new Version(21, new Array(6, 28, 50, 72, 94), new ECBlocks(28, new ECB(4, 116), new ECB(4, 117)), new ECBlocks(26, new ECB(17, 42)), new ECBlocks(28, new ECB(17, 22), new ECB(6, 23)), new ECBlocks(30, new ECB(19, 16), new ECB(6, 17))), \r\n  new Version(22, new Array(6, 26, 50, 74, 98), new ECBlocks(28, new ECB(2, 111), new ECB(7, 112)), new ECBlocks(28, new ECB(17, 46)), new ECBlocks(30, new ECB(7, 24), new ECB(16, 25)), new ECBlocks(24, new ECB(34, 13))), \r\n  new Version(23, new Array(6, 30, 54, 74, 102), new ECBlocks(30, new ECB(4, 121), new ECB(5, 122)), new ECBlocks(28, new ECB(4, 47), new ECB(14, 48)), new ECBlocks(30, new ECB(11, 24), new ECB(14, 25)), new ECBlocks(30, new ECB(16, 15), new ECB(14, 16))), \r\n  new Version(24, new Array(6, 28, 54, 80, 106), new ECBlocks(30, new ECB(6, 117), new ECB(4, 118)), new ECBlocks(28, new ECB(6, 45), new ECB(14, 46)), new ECBlocks(30, new ECB(11, 24), new ECB(16, 25)), new ECBlocks(30, new ECB(30, 16), new ECB(2, 17))), \r\n  new Version(25, new Array(6, 32, 58, 84, 110), new ECBlocks(26, new ECB(8, 106), new ECB(4, 107)), new ECBlocks(28, new ECB(8, 47), new ECB(13, 48)), new ECBlocks(30, new ECB(7, 24), new ECB(22, 25)), new ECBlocks(30, new ECB(22, 15), new ECB(13, 16))), \r\n  new Version(26, new Array(6, 30, 58, 86, 114), new ECBlocks(28, new ECB(10, 114), new ECB(2, 115)), new ECBlocks(28, new ECB(19, 46), new ECB(4, 47)), new ECBlocks(28, new ECB(28, 22), new ECB(6, 23)), new ECBlocks(30, new ECB(33, 16), new ECB(4, 17))), \r\n  new Version(27, new Array(6, 34, 62, 90, 118), new ECBlocks(30, new ECB(8, 122), new ECB(4, 123)), new ECBlocks(28, new ECB(22, 45), new ECB(3, 46)), new ECBlocks(30, new ECB(8, 23), new ECB(26, 24)), new ECBlocks(30, new ECB(12, 15),     new ECB(28, 16))),\r\n  new Version(28, new Array(6, 26, 50, 74, 98, 122), new ECBlocks(30, new ECB(3, 117), new ECB(10, 118)), new ECBlocks(28, new ECB(3, 45), new ECB(23, 46)), new ECBlocks(30, new ECB(4, 24), new ECB(31, 25)), new ECBlocks(30, new ECB(11, 15), new ECB(31, 16))), \r\n  new Version(29, new Array(6, 30, 54, 78, 102, 126), new ECBlocks(30, new ECB(7, 116), new ECB(7, 117)), new ECBlocks(28, new ECB(21, 45), new ECB(7, 46)), new ECBlocks(30, new ECB(1, 23), new ECB(37, 24)), new ECBlocks(30, new ECB(19, 15), new ECB(26, 16))), \r\n  new Version(30, new Array(6, 26, 52, 78, 104, 130), new ECBlocks(30, new ECB(5, 115), new ECB(10, 116)), new ECBlocks(28, new ECB(19, 47), new ECB(10, 48)), new ECBlocks(30, new ECB(15, 24), new ECB(25, 25)), new ECBlocks(30, new ECB(23, 15), new ECB(25, 16))), \r\n  new Version(31, new Array(6, 30, 56, 82, 108, 134), new ECBlocks(30, new ECB(13, 115), new ECB(3, 116)), new ECBlocks(28, new ECB(2, 46), new ECB(29, 47)), new ECBlocks(30, new ECB(42, 24), new ECB(1, 25)), new ECBlocks(30, new ECB(23, 15), new ECB(28, 16))), \r\n  new Version(32, new Array(6, 34, 60, 86, 112, 138), new ECBlocks(30, new ECB(17, 115)), new ECBlocks(28, new ECB(10, 46), new ECB(23, 47)), new ECBlocks(30, new ECB(10, 24), new ECB(35, 25)), new ECBlocks(30, new ECB(19, 15), new ECB(35, 16))), \r\n  new Version(33, new Array(6, 30, 58, 86, 114, 142), new ECBlocks(30, new ECB(17, 115), new ECB(1, 116)), new ECBlocks(28, new ECB(14, 46), new ECB(21, 47)), new ECBlocks(30, new ECB(29, 24), new ECB(19, 25)), new ECBlocks(30, new ECB(11, 15), new ECB(46, 16))), \r\n  new Version(34, new Array(6, 34, 62, 90, 118, 146), new ECBlocks(30, new ECB(13, 115), new ECB(6, 116)), new ECBlocks(28, new ECB(14, 46), new ECB(23, 47)), new ECBlocks(30, new ECB(44, 24), new ECB(7, 25)), new ECBlocks(30, new ECB(59, 16), new ECB(1, 17))), \r\n  new Version(35, new Array(6, 30, 54, 78, 102, 126, 150), new ECBlocks(30, new ECB(12, 121), new ECB(7, 122)), new ECBlocks(28, new ECB(12, 47), new ECB(26, 48)), new ECBlocks(30, new ECB(39, 24), new ECB(14, 25)),new ECBlocks(30, new ECB(22, 15), new ECB(41, 16))), \r\n  new Version(36, new Array(6, 24, 50, 76, 102, 128, 154), new ECBlocks(30, new ECB(6, 121), new ECB(14, 122)), new ECBlocks(28, new ECB(6, 47), new ECB(34, 48)), new ECBlocks(30, new ECB(46, 24), new ECB(10, 25)), new ECBlocks(30, new ECB(2, 15), new ECB(64, 16))), \r\n  new Version(37, new Array(6, 28, 54, 80, 106, 132, 158), new ECBlocks(30, new ECB(17, 122), new ECB(4, 123)), new ECBlocks(28, new ECB(29, 46), new ECB(14, 47)), new ECBlocks(30, new ECB(49, 24), new ECB(10, 25)), new ECBlocks(30, new ECB(24, 15), new ECB(46, 16))), \r\n  new Version(38, new Array(6, 32, 58, 84, 110, 136, 162), new ECBlocks(30, new ECB(4, 122), new ECB(18, 123)), new ECBlocks(28, new ECB(13, 46), new ECB(32, 47)), new ECBlocks(30, new ECB(48, 24), new ECB(14, 25)), new ECBlocks(30, new ECB(42, 15), new ECB(32, 16))), \r\n  new Version(39, new Array(6, 26, 54, 82, 110, 138, 166), new ECBlocks(30, new ECB(20, 117), new ECB(4, 118)), new ECBlocks(28, new ECB(40, 47), new ECB(7, 48)), new ECBlocks(30, new ECB(43, 24), new ECB(22, 25)), new ECBlocks(30, new ECB(10, 15), new ECB(67, 16))), \r\n  new Version(40, new Array(6, 30, 58, 86, 114, 142, 170), new ECBlocks(30, new ECB(19, 118), new ECB(6, 119)), new ECBlocks(28, new ECB(18, 47), new ECB(31, 48)), new ECBlocks(30, new ECB(34, 24), new ECB(34, 25)), new ECBlocks(30, new ECB(20, 15), new ECB(61, 16))));\r\n}\r\n\r\n\r\nmodule.exports = Version\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}