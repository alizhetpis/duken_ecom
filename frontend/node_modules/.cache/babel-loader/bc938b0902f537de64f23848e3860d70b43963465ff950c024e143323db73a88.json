{"ast":null,"code":"/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\n\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\n\nvar qrcode = require('./qrcode')();\nvar DataMask = {};\nDataMask.forReference = function (reference) {\n  if (reference < 0 || reference > 7) {\n    throw \"System.ArgumentException\";\n  }\n  return DataMask.DATA_MASKS[reference];\n};\nfunction DataMask000() {\n  this.unmaskBitMatrix = function (bits, dimension) {\n    for (var i = 0; i < dimension; i++) {\n      for (var j = 0; j < dimension; j++) {\n        if (this.isMasked(i, j)) {\n          bits.flip(j, i);\n        }\n      }\n    }\n  };\n  this.isMasked = function (i, j) {\n    return (i + j & 0x01) == 0;\n  };\n}\nfunction DataMask001() {\n  this.unmaskBitMatrix = function (bits, dimension) {\n    for (var i = 0; i < dimension; i++) {\n      for (var j = 0; j < dimension; j++) {\n        if (this.isMasked(i, j)) {\n          bits.flip(j, i);\n        }\n      }\n    }\n  };\n  this.isMasked = function (i, j) {\n    return (i & 0x01) == 0;\n  };\n}\nfunction DataMask010() {\n  this.unmaskBitMatrix = function (bits, dimension) {\n    for (var i = 0; i < dimension; i++) {\n      for (var j = 0; j < dimension; j++) {\n        if (this.isMasked(i, j)) {\n          bits.flip(j, i);\n        }\n      }\n    }\n  };\n  this.isMasked = function (i, j) {\n    return j % 3 == 0;\n  };\n}\nfunction DataMask011() {\n  this.unmaskBitMatrix = function (bits, dimension) {\n    for (var i = 0; i < dimension; i++) {\n      for (var j = 0; j < dimension; j++) {\n        if (this.isMasked(i, j)) {\n          bits.flip(j, i);\n        }\n      }\n    }\n  };\n  this.isMasked = function (i, j) {\n    return (i + j) % 3 == 0;\n  };\n}\nfunction DataMask100() {\n  this.unmaskBitMatrix = function (bits, dimension) {\n    for (var i = 0; i < dimension; i++) {\n      for (var j = 0; j < dimension; j++) {\n        if (this.isMasked(i, j)) {\n          bits.flip(j, i);\n        }\n      }\n    }\n  };\n  this.isMasked = function (i, j) {\n    return (qrcode.URShift(i, 1) + j / 3 & 0x01) == 0;\n  };\n}\nfunction DataMask101() {\n  this.unmaskBitMatrix = function (bits, dimension) {\n    for (var i = 0; i < dimension; i++) {\n      for (var j = 0; j < dimension; j++) {\n        if (this.isMasked(i, j)) {\n          bits.flip(j, i);\n        }\n      }\n    }\n  };\n  this.isMasked = function (i, j) {\n    var temp = i * j;\n    return (temp & 0x01) + temp % 3 == 0;\n  };\n}\nfunction DataMask110() {\n  this.unmaskBitMatrix = function (bits, dimension) {\n    for (var i = 0; i < dimension; i++) {\n      for (var j = 0; j < dimension; j++) {\n        if (this.isMasked(i, j)) {\n          bits.flip(j, i);\n        }\n      }\n    }\n  };\n  this.isMasked = function (i, j) {\n    var temp = i * j;\n    return ((temp & 0x01) + temp % 3 & 0x01) == 0;\n  };\n}\nfunction DataMask111() {\n  this.unmaskBitMatrix = function (bits, dimension) {\n    for (var i = 0; i < dimension; i++) {\n      for (var j = 0; j < dimension; j++) {\n        if (this.isMasked(i, j)) {\n          bits.flip(j, i);\n        }\n      }\n    }\n  };\n  this.isMasked = function (i, j) {\n    return ((i + j & 0x01) + i * j % 3 & 0x01) == 0;\n  };\n}\nDataMask.DATA_MASKS = new Array(new DataMask000(), new DataMask001(), new DataMask010(), new DataMask011(), new DataMask100(), new DataMask101(), new DataMask110(), new DataMask111());\nmodule.exports = DataMask;","map":{"version":3,"names":["qrcode","require","DataMask","forReference","reference","DATA_MASKS","DataMask000","unmaskBitMatrix","bits","dimension","i","j","isMasked","flip","DataMask001","DataMask010","DataMask011","DataMask100","URShift","DataMask101","temp","DataMask110","DataMask111","Array","module","exports"],"sources":["/Users/alizhetpis/Documents/duken/frontend/node_modules/jsqrcode/src/datamask.js"],"sourcesContent":["/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nvar qrcode = require('./qrcode')();\r\n\r\nvar DataMask = {};\r\n\r\nDataMask.forReference = function(reference)\r\n{\r\n  if (reference < 0 || reference > 7)\r\n  {\r\n    throw \"System.ArgumentException\";\r\n  }\r\n  return DataMask.DATA_MASKS[reference];\r\n}\r\n\r\nfunction DataMask000()\r\n{\r\n  this.unmaskBitMatrix=function(bits,  dimension)\r\n  {\r\n    for (var i = 0; i < dimension; i++)\r\n    {\r\n      for (var j = 0; j < dimension; j++)\r\n      {\r\n        if (this.isMasked(i, j))\r\n        {\r\n          bits.flip(j, i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.isMasked=function( i,  j)\r\n  {\r\n    return ((i + j) & 0x01) == 0;\r\n  }\r\n}\r\n\r\nfunction DataMask001()\r\n{\r\n  this.unmaskBitMatrix=function(bits,  dimension)\r\n  {\r\n    for (var i = 0; i < dimension; i++)\r\n    {\r\n      for (var j = 0; j < dimension; j++)\r\n      {\r\n        if (this.isMasked(i, j))\r\n        {\r\n          bits.flip(j, i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.isMasked=function( i,  j)\r\n  {\r\n    return (i & 0x01) == 0;\r\n  }\r\n}\r\n\r\nfunction DataMask010()\r\n{\r\n  this.unmaskBitMatrix=function(bits,  dimension)\r\n  {\r\n    for (var i = 0; i < dimension; i++)\r\n    {\r\n      for (var j = 0; j < dimension; j++)\r\n      {\r\n        if (this.isMasked(i, j))\r\n        {\r\n          bits.flip(j, i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.isMasked=function( i,  j)\r\n  {\r\n    return j % 3 == 0;\r\n  }\r\n}\r\n\r\nfunction DataMask011()\r\n{\r\n  this.unmaskBitMatrix=function(bits,  dimension)\r\n  {\r\n    for (var i = 0; i < dimension; i++)\r\n    {\r\n      for (var j = 0; j < dimension; j++)\r\n      {\r\n        if (this.isMasked(i, j))\r\n        {\r\n          bits.flip(j, i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.isMasked=function( i,  j)\r\n  {\r\n    return (i + j) % 3 == 0;\r\n  }\r\n}\r\n\r\nfunction DataMask100()\r\n{\r\n  this.unmaskBitMatrix=function(bits,  dimension)\r\n  {\r\n    for (var i = 0; i < dimension; i++)\r\n    {\r\n      for (var j = 0; j < dimension; j++)\r\n      {\r\n        if (this.isMasked(i, j))\r\n        {\r\n          bits.flip(j, i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.isMasked=function( i,  j)\r\n  {\r\n    return (((qrcode.URShift(i, 1)) + (j / 3)) & 0x01) == 0;\r\n  }\r\n}\r\n\r\nfunction DataMask101()\r\n{\r\n  this.unmaskBitMatrix=function(bits,  dimension)\r\n  {\r\n    for (var i = 0; i < dimension; i++)\r\n    {\r\n      for (var j = 0; j < dimension; j++)\r\n      {\r\n        if (this.isMasked(i, j))\r\n        {\r\n          bits.flip(j, i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.isMasked=function( i,  j)\r\n  {\r\n    var temp = i * j;\r\n    return (temp & 0x01) + (temp % 3) == 0;\r\n  }\r\n}\r\n\r\nfunction DataMask110()\r\n{\r\n  this.unmaskBitMatrix=function(bits,  dimension)\r\n  {\r\n    for (var i = 0; i < dimension; i++)\r\n    {\r\n      for (var j = 0; j < dimension; j++)\r\n      {\r\n        if (this.isMasked(i, j))\r\n        {\r\n          bits.flip(j, i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.isMasked=function( i,  j)\r\n  {\r\n    var temp = i * j;\r\n    return (((temp & 0x01) + (temp % 3)) & 0x01) == 0;\r\n  }\r\n}\r\nfunction DataMask111()\r\n{\r\n  this.unmaskBitMatrix=function(bits,  dimension)\r\n  {\r\n    for (var i = 0; i < dimension; i++)\r\n    {\r\n      for (var j = 0; j < dimension; j++)\r\n      {\r\n        if (this.isMasked(i, j))\r\n        {\r\n          bits.flip(j, i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.isMasked=function( i,  j)\r\n  {\r\n    return ((((i + j) & 0x01) + ((i * j) % 3)) & 0x01) == 0;\r\n  }\r\n}\r\n\r\nDataMask.DATA_MASKS = new Array(new DataMask000(), new DataMask001(), new DataMask010(), new DataMask011(), new DataMask100(), new DataMask101(), new DataMask110(), new DataMask111());\r\n\r\nmodule.exports = DataMask;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}