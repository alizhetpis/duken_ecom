{"ast":null,"code":"/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\n\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\n\nvar GF256Poly = null;\nvar GF256 = null;\nmodule.exports = GF256 = function (primitive) {\n  this.expTable = new Array(256);\n  this.logTable = new Array(256);\n  // delayed dep injection\n  if (!GF256Poly) GF256Poly = require('./gf256poly');\n  var x = 1;\n  for (var i = 0; i < 256; i++) {\n    this.expTable[i] = x;\n    x <<= 1; // x = x * 2; we're assuming the generator alpha is 2\n    if (x >= 0x100) {\n      x ^= primitive;\n    }\n  }\n  for (var i = 0; i < 255; i++) {\n    this.logTable[this.expTable[i]] = i;\n  }\n  // logTable[0] == 0 but this should never be used\n  var at0 = new Array(1);\n  at0[0] = 0;\n  this.zero = new GF256Poly(this, new Array(at0));\n  var at1 = new Array(1);\n  at1[0] = 1;\n  this.one = new GF256Poly(this, new Array(at1));\n  this.__defineGetter__(\"Zero\", function () {\n    return this.zero;\n  });\n  this.__defineGetter__(\"One\", function () {\n    return this.one;\n  });\n  this.buildMonomial = function (degree, coefficient) {\n    if (degree < 0) {\n      throw \"System.ArgumentException\";\n    }\n    if (coefficient == 0) {\n      return zero;\n    }\n    var coefficients = new Array(degree + 1);\n    for (var i = 0; i < coefficients.length; i++) coefficients[i] = 0;\n    coefficients[0] = coefficient;\n    return new GF256Poly(this, coefficients);\n  };\n  this.exp = function (a) {\n    return this.expTable[a];\n  };\n  this.log = function (a) {\n    if (a == 0) {\n      throw \"System.ArgumentException\";\n    }\n    return this.logTable[a];\n  };\n  this.inverse = function (a) {\n    if (a == 0) {\n      throw \"System.ArithmeticException\";\n    }\n    return this.expTable[255 - this.logTable[a]];\n  };\n  this.multiply = function (a, b) {\n    if (a == 0 || b == 0) return 0;else if (a == 1) return b;else if (b == 1) return a;\n    return this.expTable[(this.logTable[a] + this.logTable[b]) % 255];\n  };\n};\nGF256.QR_CODE_FIELD = new GF256(0x011D);\nGF256.DATA_MATRIX_FIELD = new GF256(0x012D);\nGF256.addOrSubtract = function (a, b) {\n  return a ^ b;\n};","map":{"version":3,"names":["GF256Poly","GF256","module","exports","primitive","expTable","Array","logTable","require","x","i","at0","zero","at1","one","__defineGetter__","buildMonomial","degree","coefficient","coefficients","length","exp","a","log","inverse","multiply","b","QR_CODE_FIELD","DATA_MATRIX_FIELD","addOrSubtract"],"sources":["/Users/alizhetpis/Documents/duken/frontend/node_modules/jsqrcode/src/gf256.js"],"sourcesContent":["/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\n\r\nvar GF256Poly = null;\r\n\r\nvar GF256 = null;\r\n\r\nmodule.exports = GF256 = function( primitive)\r\n{\r\n  this.expTable = new Array(256);\r\n  this.logTable = new Array(256);\r\n  // delayed dep injection\r\n  if(!GF256Poly) GF256Poly = require('./gf256poly');\r\n  var x = 1;\r\n  for (var i = 0; i < 256; i++)\r\n  {\r\n    this.expTable[i] = x;\r\n    x <<= 1; // x = x * 2; we're assuming the generator alpha is 2\r\n    if (x >= 0x100)\r\n    {\r\n      x ^= primitive;\r\n    }\r\n  }\r\n  for (var i = 0; i < 255; i++)\r\n  {\r\n    this.logTable[this.expTable[i]] = i;\r\n  }\r\n  // logTable[0] == 0 but this should never be used\r\n  var at0=new Array(1);at0[0]=0;\r\n  this.zero = new GF256Poly(this, new Array(at0));\r\n  var at1=new Array(1);at1[0]=1;\r\n  this.one = new GF256Poly(this, new Array(at1));\r\n  \r\n  this.__defineGetter__(\"Zero\", function()\r\n  {\r\n    return this.zero;\r\n  });\r\n  this.__defineGetter__(\"One\", function()\r\n  {\r\n    return this.one;\r\n  });\r\n  this.buildMonomial=function( degree,  coefficient)\r\n    {\r\n      if (degree < 0)\r\n      {\r\n        throw \"System.ArgumentException\";\r\n      }\r\n      if (coefficient == 0)\r\n      {\r\n        return zero;\r\n      }\r\n      var coefficients = new Array(degree + 1);\r\n      for(var i=0;i<coefficients.length;i++)coefficients[i]=0;\r\n      coefficients[0] = coefficient;\r\n      return new GF256Poly(this, coefficients);\r\n    }\r\n  this.exp=function(a)\r\n    {\r\n      return this.expTable[a];\r\n    }\r\n  this.log=function(a)\r\n    {\r\n      if (a == 0)\r\n      {\r\n        throw \"System.ArgumentException\";\r\n      }\r\n      return this.logTable[a];\r\n    }\r\n  this.inverse=function(a)\r\n    {\r\n      if (a == 0)\r\n      {\r\n        throw \"System.ArithmeticException\";\r\n      }\r\n      return this.expTable[255 - this.logTable[a]];\r\n    }\r\n  this.multiply=function(a, b) {\r\n    if (a == 0 || b == 0) return 0;\r\n    else if (a == 1) return b;\r\n    else if (b == 1) return a;\r\n    return this.expTable[(this.logTable[a] + this.logTable[b]) % 255];\r\n  }\r\n}\r\n\r\nGF256.QR_CODE_FIELD = new GF256(0x011D);\r\nGF256.DATA_MATRIX_FIELD = new GF256(0x012D);\r\n\r\nGF256.addOrSubtract = function(a, b) {\r\n  return a ^ b;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}