{"ast":null,"code":"var _jsxFileName = \"/Users/alizhetpis/Documents/duken/frontend/src/screens/ProfileScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport QRCode from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return {\n        ...state,\n        loadingUpdate: true\n      };\n    case 'UPDATE_SUCCESS':\n      return {\n        ...state,\n        loadingUpdate: false\n      };\n    case 'UPDATE_FAIL':\n      return {\n        ...state,\n        loadingUpdate: false\n      };\n    default:\n      return state;\n  }\n};\nexport default function ProfileScreen() {\n  _s();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [enable2FA, setEnable2FA] = useState(userInfo.enable2FA); // State for toggle switch\n\n  const [{\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false\n  });\n  const submitHandler = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await axios.put('/api/users/profile', {\n        name,\n        email,\n        password,\n        confirmPassword,\n        enable2FA // Include the toggle value\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: 'UPDATE_SUCCESS'\n      });\n      ctxDispatch({\n        type: 'USER_SIGNIN',\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL'\n      });\n      toast.error(getError(err));\n    }\n  };\n  const toggle2FAHandler = () => {\n    if (!enable2FA) {\n      // Generate a secret for 2FA (you can modify this as needed)\n      const secret = 'your-secret-key';\n\n      // Generate the 2FA QR code URL\n      const qrCodeUrl = `otpauth://totp/Duken:${userInfo.email}?secret=${secret}&issuer=Duken`;\n\n      // Set the QR code data URL in state\n      setQRCodeDataUrl(qrCodeUrl);\n    } else {\n      // Clear the QR code data URL when disabling 2FA\n      setQRCodeDataUrl('');\n    }\n\n    // Toggle the 2FA status\n    setEnable2FA(!enable2FA);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"enable2FA\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"switch\",\n          id: \"custom-switch\",\n          label: \"Enable 2FA\",\n          checked: enable2FA,\n          onChange: () => setEnable2FA(!enable2FA)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: qrCodeDataUrl && /*#__PURE__*/_jsxDEV(QRCode, {\n          value: qrCodeDataUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileScreen, \"1UyXIlysAFW+gCRO66WV/cxvujE=\");\n_c = ProfileScreen;\nvar _c;\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useContext","useReducer","useState","Helmet","Form","Button","Store","toast","getError","axios","QRCode","reducer","state","action","type","loadingUpdate","ProfileScreen","dispatch","ctxDispatch","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","enable2FA","setEnable2FA","submitHandler","e","preventDefault","data","put","headers","Authorization","token","payload","localStorage","setItem","JSON","stringify","success","err","error","toggle2FAHandler","secret","qrCodeUrl","setQRCodeDataUrl","target","value","qrCodeDataUrl"],"sources":["/Users/alizhetpis/Documents/duken/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport QRCode from 'qrcode.react';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [enable2FA, setEnable2FA] = useState(userInfo.enable2FA); // State for toggle switch\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        '/api/users/profile',\n        {\n          name,\n          email,\n          password,\n          confirmPassword,\n          enable2FA, // Include the toggle value\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: 'UPDATE_SUCCESS',\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL',\n      });\n      toast.error(getError(err));\n    }\n  };\n  \n  const toggle2FAHandler = () => {\n    if (!enable2FA) {\n      // Generate a secret for 2FA (you can modify this as needed)\n      const secret = 'your-secret-key';\n\n      // Generate the 2FA QR code URL\n      const qrCodeUrl = `otpauth://totp/Duken:${userInfo.email}?secret=${secret}&issuer=Duken`;\n\n      // Set the QR code data URL in state\n      setQRCodeDataUrl(qrCodeUrl);\n    } else {\n      // Clear the QR code data URL when disabling 2FA\n      setQRCodeDataUrl('');\n    }\n\n    // Toggle the 2FA status\n    setEnable2FA(!enable2FA);\n  };\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      <form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"enable2FA\">\n        <Form.Check\n          type=\"switch\"\n          id=\"custom-switch\"\n          label=\"Enable 2FA\"\n          checked={enable2FA}\n          onChange={() => setEnable2FA(!enable2FA)}\n        />\n      </Form.Group>\n        <div className=\"mb-3\">\n          {/* Render the QR code using the 'QRCode' component */}\n          {qrCodeDataUrl && <QRCode value={qrCodeDataUrl} />}\n        </div>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}